definitions:
  dto.CommentResponse:
    properties:
      created_at:
        example: "2023-01-01"
        type: string
      id:
        example: 1
        type: integer
      message:
        example: ini komen
        type: string
      photo_id:
        example: 1
        type: integer
      updated_at:
        example: "2023-01-01"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  dto.GetCommentResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.CommentResponse'
        type: array
      message:
        example: comment data have been sent successfully
        type: string
      result:
        example: success
        type: string
      statusCode:
        example: 200
        type: integer
    type: object
  dto.GetPhotoResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.PhotoResponse'
        type: array
      message:
        example: photo data have been sent successfully
        type: string
      result:
        example: success
        type: string
      statusCode:
        example: 200
        type: integer
    type: object
  dto.GetSocialMediaResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.SocialMediaResponse'
        type: array
      message:
        type: string
      result:
        type: string
      statusCode:
        type: integer
    type: object
  dto.NewCommentRequest:
    properties:
      message:
        example: ini komen
        type: string
      photo_id:
        example: 1
        type: integer
    type: object
  dto.NewCommentResponse:
    properties:
      message:
        example: new comment data successfully created
        type: string
      result:
        example: success
        type: string
      statusCode:
        example: 201
        type: integer
    type: object
  dto.NewLoginRequest:
    properties:
      email:
        example: user1@gmail.com
        type: string
      password:
        example: abc123
        type: string
    type: object
  dto.NewPhotoRequest:
    properties:
      caption:
        example: Ini foto doraemon
        type: string
      photo_url:
        example: http://imageurl.com
        type: string
      title:
        example: Doraemon
        type: string
    type: object
  dto.NewPhotoResponse:
    properties:
      message:
        example: new photo data successfully created
        type: string
      result:
        example: success
        type: string
      statusCode:
        example: 201
        type: integer
    type: object
  dto.NewSocialMediaRequest:
    properties:
      name:
        example: instagram
        type: string
      social_media_url:
        example: http://instagram.com
        type: string
    type: object
  dto.NewSocialMediaResponse:
    properties:
      message:
        example: new social media data successfully created
        type: string
      result:
        example: success
        type: string
      statusCode:
        example: 201
        type: integer
    type: object
  dto.NewUserRequest:
    properties:
      age:
        example: 17
        type: integer
      email:
        example: user1@gmail.com
        type: string
      password:
        example: abc123
        type: string
      username:
        example: user1
        type: string
    type: object
  dto.PhotoResponse:
    properties:
      caption:
        example: Ini foto doraemon
        type: string
      created_at:
        example: "2023-01-01"
        type: string
      id:
        example: 1
        type: integer
      photo_url:
        example: http://imageurl.com
        type: string
      title:
        example: Doraemon
        type: string
      updated_at:
        example: "2023-01-01"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  dto.SocialMediaResponse:
    properties:
      created_at:
        example: "2023-01-01"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: instagram
        type: string
      social_media_url:
        example: http://instagram.com
        type: string
      updated_at:
        example: "2023-01-01"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
info:
  contact: {}
paths:
  /comment:
    get:
      consumes:
      - application/json
      description: Get All Comment Data
      operationId: get-comments
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.GetCommentResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetCommentResponse'
      tags:
      - comment
    post:
      consumes:
      - application/json
      description: Create New Comment Data
      operationId: create-new-comment
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewCommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.NewCommentRequest'
      tags:
      - comment
  /comment/:commentId:
    delete:
      consumes:
      - application/json
      description: Delete Comment Data By Id
      operationId: delete-comment-by-id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewCommentResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NewCommentResponse'
      tags:
      - comment
    get:
      consumes:
      - application/json
      description: Get One Comment Data By Id
      operationId: get-comment-by-id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.CommentResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CommentResponse'
      tags:
      - comment
    put:
      consumes:
      - application/json
      description: Update Comment Data By Id
      operationId: update-comment-by-id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewCommentResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NewCommentResponse'
      tags:
      - comment
  /photo:
    get:
      consumes:
      - application/json
      description: Get All Photo Data
      operationId: get-photos
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.GetPhotoResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetPhotoResponse'
      tags:
      - photo
    post:
      consumes:
      - application/json
      description: Create New Photo Data
      operationId: create-new-photo
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewPhotoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.NewPhotoRequest'
      tags:
      - photo
  /photo/:photoId:
    delete:
      consumes:
      - application/json
      description: Delete Photo Data By Id
      operationId: delete-photo-by-id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewPhotoResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NewPhotoResponse'
      tags:
      - photo
    get:
      consumes:
      - application/json
      description: Get One Photo Data By Id
      operationId: get-photo-by-id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.PhotoResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PhotoResponse'
      tags:
      - photo
    put:
      consumes:
      - application/json
      description: Update Photo Data By Id
      operationId: update-photo-by-id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewPhotoResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NewPhotoResponse'
      tags:
      - photo
  /social_media:
    get:
      consumes:
      - application/json
      description: Get All Social Media Data
      operationId: get-social-medias
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.GetSocialMediaResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetSocialMediaResponse'
      tags:
      - social_media
    post:
      consumes:
      - application/json
      description: Create New Social Media Data
      operationId: create-new-social-media
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewSocialMediaRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.NewSocialMediaRequest'
      tags:
      - social_media
  /social_media/:socialMediaId:
    delete:
      consumes:
      - application/json
      description: Delete Social Media Data By Id
      operationId: delete-social-media-by-id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewSocialMediaResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NewSocialMediaResponse'
      tags:
      - social_media
    get:
      consumes:
      - application/json
      description: Get One Social Media Data By Id
      operationId: get-social-media-by-id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.SocialMediaResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SocialMediaResponse'
      tags:
      - social_media
    put:
      consumes:
      - application/json
      description: Update Social Media Data By Id
      operationId: update-social-media-by-id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewSocialMediaResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NewSocialMediaResponse'
      tags:
      - social_media
  /user/login:
    post:
      consumes:
      - application/json
      description: Login using created account
      operationId: login
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.NewLoginRequest'
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Create New User
      operationId: register
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.NewUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.NewUserRequest'
      tags:
      - user
swagger: "2.0"
